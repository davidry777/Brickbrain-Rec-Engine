#!/bin/bash

# ========================================
# üß± LEGO Recommendation Engine 
# Natural Language Features - Quick Reference
# ========================================

# Colors for output
GREEN='\033[0;32m'
BLUE='\033[0;34m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${BLUE}üß± LEGO Recommendation Engine - Natural Language Quick Reference${NC}"
echo "================================================================="

echo -e "\n${GREEN}üöÄ Setup Commands${NC}"
echo "=================="
echo "# Complete automated setup"
echo "./setup_nl_features.sh"
echo ""
echo "# Test all NL features"
echo "./test_nl_features.sh"
echo ""
echo "# Manual Docker setup"
echo "docker-compose up -d"
echo "./reset_db.sh"

echo -e "\n${GREEN}üß™ Testing Commands${NC}"
echo "==================="
echo "# Test API health"
echo "curl http://localhost:8000/health"
echo ""
echo "# Test natural language search"
echo "curl -X POST \"http://localhost:8000/search/natural\" \\"
echo "     -H \"Content-Type: application/json\" \\"
echo "     -d '{\"query\": \"star wars sets for kids\", \"top_k\": 5}'"
echo ""
echo "# Test query understanding"
echo "curl -X POST \"http://localhost:8000/nlp/understand\" \\"
echo "     -H \"Content-Type: application/json\" \\"
echo "     -d '{\"query\": \"birthday gift for 8 year old\"}'"
echo ""
echo "# Run demo script"
echo "docker-compose exec app conda run -n brickbrain-rec python examples/nl_demo_script.py"
echo ""
echo "# Run integration tests"
echo "docker-compose exec app conda run -n brickbrain-rec python tests/integration/nl_integration_test.py"

echo -e "\n${GREEN}üìä Monitoring Commands${NC}"
echo "======================"
echo "# View application logs"
echo "docker-compose logs app"
echo ""
echo "# Follow logs in real-time"
echo "docker-compose logs -f app"
echo ""
echo "# Check cache size"
echo "du -sh .cache/"
echo ""
echo "# Check embeddings size"
echo "du -sh embeddings/"
echo ""
echo "# Check database size"
echo "docker-compose exec postgres psql -U brickbrain -d brickbrain -c \"\\dt+\""

echo -e "\n${GREEN}üîß Development Commands${NC}"
echo "======================="
echo "# Access application container"
echo "docker-compose exec app bash"
echo ""
echo "# Run Python in conda environment"
echo "docker-compose exec app conda run -n brickbrain-rec python"
echo ""
echo "# Install additional packages"
echo "docker-compose exec app conda run -n brickbrain-rec pip install <package>"
echo ""
echo "# Run specific test file"
echo "docker-compose exec app conda run -n brickbrain-rec python tests/unit/test_recommendations.py"
echo ""
echo "# Reset database"
echo "./reset_db.sh"

echo -e "\n${GREEN}üêõ Troubleshooting Commands${NC}"
echo "=========================="
echo "# Restart all services"
echo "docker-compose restart"
echo ""
echo "# Restart just the app"
echo "docker-compose restart app"
echo ""
echo "# Clean restart"
echo "docker-compose down && docker-compose up -d"
echo ""
echo "# Check service status"
echo "docker-compose ps"
echo ""
echo "# Check database connection"
echo "docker-compose exec postgres pg_isready -U brickbrain"
echo ""
echo "# Check conda environment"
echo "docker-compose exec app conda env list"
echo ""
echo "# Check Python packages"
echo "docker-compose exec app conda run -n brickbrain-rec pip list | grep -E '(langchain|sentence|transformers)'"

echo -e "\n${GREEN}üìö Example NL Queries${NC}"
echo "===================="
echo "# Simple theme search"
echo "\"star wars sets for kids\""
echo ""
echo "# Gift recommendation"
echo "\"birthday gift for my 10-year-old nephew\""
echo ""
echo "# Budget-constrained search"
echo "\"lego sets under \\$50 for beginners\""
echo ""
echo "# Complex search with filters"
echo "\"detailed technic sets between 1000 and 2000 pieces for adults\""
echo ""
echo "# Similar set request"
echo "\"sets similar to the millennium falcon but smaller\""
echo ""
echo "# Age-specific search"
echo "\"challenging builds for teenagers\""
echo ""
echo "# Interest-based search"
echo "\"sets for someone who loves architecture\""

echo -e "\n${GREEN}üîó Useful URLs${NC}"
echo "==============="
echo "# API Documentation"
echo "http://localhost:8000/docs"
echo ""
echo "# Alternative API docs"
echo "http://localhost:8000/redoc"
echo ""
echo "# Health check"
echo "http://localhost:8000/health"
echo ""
echo "# API metrics (if enabled)"
echo "http://localhost:8000/metrics"

echo -e "\n${GREEN}üìÅ Important Files${NC}"
echo "=================="
echo "# Main NL processor"
echo "src/scripts/lego_nlp_recommeder.py"
echo ""
echo "# API endpoints"
echo "src/scripts/recommendation_api.py"
echo ""
echo "# Demo script"
echo "examples/nl_demo_script.py"
echo ""
echo "# Integration tests"
echo "tests/integration/nl_integration_test.py"
echo ""
echo "# Configuration"
echo "docker-compose.yml"
echo "environment.yml"
echo "requirements.txt"
echo ""
echo "# Documentation"
echo "NL_FEATURES_README.md"
echo "API_README.md"

echo -e "\n${GREEN}üéØ Quick Start Sequence${NC}"
echo "======================="
echo "1. ./setup_nl_features.sh      # Complete setup"
echo "2. ./test_nl_features.sh       # Test features"
echo "3. Open http://localhost:8000/docs  # Explore API"
echo "4. Try natural language queries    # Test manually"
echo "5. Run examples/nl_demo_script.py  # See demos"

echo -e "\n${YELLOW}üí° Pro Tips${NC}"
echo "==========="
echo "‚Ä¢ Use specific terms in queries for better results"
echo "‚Ä¢ Include context like age, interests, or budget"
echo "‚Ä¢ Monitor logs for debugging: docker-compose logs app"
echo "‚Ä¢ Test with diverse queries to understand capabilities"
echo "‚Ä¢ Check cache directories if performance is slow"
echo "‚Ä¢ Use the /nlp/understand endpoint to debug query parsing"

echo -e "\n${BLUE}üéâ Ready to explore Natural Language Features!${NC}"
echo "For detailed setup instructions, see: NL_FEATURES_README.md"
